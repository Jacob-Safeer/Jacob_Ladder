# syntax=docker/dockerfile:1
###############################################################################
# OpenCV 4.10.0 from source, on top of ROS2 + PX4 + Gazebo Harmonic image
###############################################################################
FROM jacobsafeer/px4-dev-harmonic-jammy-humble:latest

# ---------------------------------------------------------------------------
# 0. Environment & tools
# ---------------------------------------------------------------------------
ARG DEBIAN_FRONTEND=noninteractive
ENV OPENCV_VERSION=4.10.0

# ---------------------------------------------------------------------------
# 1. Install dependencies for building OpenCV
# ---------------------------------------------------------------------------
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake git pkg-config \
    libgtk-3-dev \
    libavcodec-dev libavformat-dev libswscale-dev \
    libv4l-dev \
    libxvidcore-dev libx264-dev \
    libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr \
    libatlas-base-dev \
    python3-dev python3-numpy \
    libtbb2 libtbb-dev \
    libdc1394-dev \
    libopenexr-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer1.0-dev \
    && rm -rf /var/lib/apt/lists/*

# ---------------------------------------------------------------------------
# 2. Download and build OpenCV 4.10.0
# ---------------------------------------------------------------------------
WORKDIR /opt

RUN git clone --branch ${OPENCV_VERSION} --depth 1 https://github.com/opencv/opencv.git && \
    git clone --branch ${OPENCV_VERSION} --depth 1 https://github.com/opencv/opencv_contrib.git

WORKDIR /opt/opencv
RUN mkdir -p build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=Release \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib/modules \
          -D WITH_TBB=ON \
          -D WITH_V4L=ON \
          -D WITH_QT=OFF \
          -D WITH_OPENGL=ON \
          -D BUILD_EXAMPLES=OFF .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# ---------------------------------------------------------------------------
# 3. Cleanup build artifacts (optional but recommended)
# ---------------------------------------------------------------------------
RUN rm -rf /opt/opencv /opt/opencv_contrib

# ---------------------------------------------------------------------------
# 4. Test OpenCV install (optional)
# ---------------------------------------------------------------------------
RUN python3 -c "import cv2; print('OpenCV version:', cv2.__version__)" || echo "Python OpenCV binding not found"

CMD ["/bin/bash"]

